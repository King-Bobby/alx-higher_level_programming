============================
How to use 4-print_square.py
============================

This module fines a function ``def print_square(size)``

Usage
=====

``def print_square(size)`` returns a '#' square of sides equal to size.

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(4)
    ####
    ####
    ####
    ####

Size must be an int if not, return error message

::

    >>> print_square(2)
    ##
    ##

::

    >>> print_square(2.4)
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square("3")
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square("hello")
    Traceback (most recent call last):
    TypeError: size must be an integer

Size must be greater than 0

::

    >>> print_square(-1)
    Traceback (most recent call last):
    ValueError: size must be >= 0

Size must not be empty

::

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'
